name: CI - Test & Lint

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_DB: heimdall_test
          POSTGRES_USER: heimdall_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        python-version: [3.11]
        service:
          [rf-acquisition, training, inference, data-ingestion-web, api-gateway]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('services/${{ matrix.service }}/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f services/${{ matrix.service }}/requirements.txt ]; then
            pip install -r services/${{ matrix.service }}/requirements.txt
          fi
          pip install pytest pytest-cov pytest-asyncio black ruff

      - name: Lint with black and ruff
        run: |
          if [ -d services/${{ matrix.service }}/src ]; then
            black --check services/${{ matrix.service }}/src/
            ruff check services/${{ matrix.service }}/src/
          fi

      - name: Test with pytest
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: heimdall_test
          POSTGRES_USER: heimdall_user
          POSTGRES_PASSWORD: test_password
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          if [ -d services/${{ matrix.service }}/tests ]; then
            cd services/${{ matrix.service }}
            pytest tests/ -v --cov=src/ --cov-report=xml --cov-report=term-missing
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: services/${{ matrix.service }}/coverage.xml
          flags: ${{ matrix.service }}
          name: codecov-${{ matrix.service }}
          fail_ci_if_error: false
