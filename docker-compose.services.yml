version: '3.8'

services:
  # API Gateway - Main entry point
  api-gateway:
    build:
      context: ./services
      dockerfile: api-gateway/Dockerfile
    container_name: heimdall-api-gateway
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=api-gateway
      - SERVICE_PORT=8000
      - DATABASE_URL=postgresql://heimdall:heimdall@postgres:5432/heimdall
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RF Acquisition Service
  rf-acquisition:
    build:
      context: ./services
      dockerfile: rf-acquisition/Dockerfile
    container_name: heimdall-rf-acquisition
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=rf-acquisition
      - SERVICE_PORT=8001
      - DATABASE_URL=postgresql://heimdall:heimdall@postgres:5432/heimdall
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Training Service
  training:
    build:
      context: ./services/training
      dockerfile: Dockerfile
    container_name: heimdall-training
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=training
      - SERVICE_PORT=8002
      - DATABASE_URL=postgresql://heimdall:heimdall@postgres:5432/heimdall
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Inference Service
  inference:
    build:
      context: ./services
      dockerfile: inference/Dockerfile
    container_name: heimdall-inference
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=inference
      - SERVICE_PORT=8003
      - DATABASE_URL=postgresql://heimdall:heimdall@postgres:5432/heimdall
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Data Ingestion Web Service
  data-ingestion-web:
    build:
      context: ./services
      dockerfile: data-ingestion-web/Dockerfile
    container_name: heimdall-data-ingestion-web
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=data-ingestion-web
      - SERVICE_PORT=8004
      - DATABASE_URL=postgresql://heimdall:heimdall@postgres:5432/heimdall
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database (from main docker-compose.yml)
  postgres:
    image: postgres:15-alpine
    container_name: heimdall-postgres
    environment:
      POSTGRES_USER: heimdall
      POSTGRES_PASSWORD: heimdall
      POSTGRES_DB: heimdall
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U heimdall"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (from main docker-compose.yml)
  redis:
    image: redis:7-alpine
    container_name: heimdall-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - heimdall-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  heimdall-network:
    driver: bridge
