{
  "config": {
    "configFile": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/playwright.config.ts",
    "rootDir": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 9
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "playwright-report/results.json"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 9
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.56.1",
    "workers": 12,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3001",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "analytics.spec.ts",
      "file": "analytics.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Analytics Page - Real Backend Integration",
          "file": "analytics.spec.ts",
          "line": 19,
          "column": 6,
          "specs": [
            {
              "title": "should load analytics page and fetch metrics from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 17388,
                      "error": {
                        "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"",
                        "stack": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts:30:43",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts",
                          "column": 43,
                          "line": 30
                        },
                        "snippet": "\u001b[0m \u001b[90m 28 |\u001b[39m     \n \u001b[90m 29 |\u001b[39m     \u001b[90m// Wait for analytics API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m analyticsResponsePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m       (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m         \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m         \u001b[36mreturn\u001b[39m (\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts",
                            "column": 43,
                            "line": 30
                          },
                          "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     \n \u001b[90m 29 |\u001b[39m     \u001b[90m// Wait for analytics API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m analyticsResponsePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m       (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m         \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m         \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts:30:43\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.955Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---34817--fetch-metrics-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---34817--fetch-metrics-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---34817--fetch-metrics-from-backend-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts",
                        "column": 43,
                        "line": 30
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-7ad92b5258fe3dc39ae9",
              "file": "analytics.spec.ts",
              "line": 25,
              "column": 3
            },
            {
              "title": "should fetch session analytics from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 30779,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts:57:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/sessions/analytics\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:33.762Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---e6422-sion-analytics-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---e6422-sion-analytics-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---e6422-sion-analytics-from-backend-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-49d03f5da670d47143c1",
              "file": "analytics.spec.ts",
              "line": 52,
              "column": 3
            },
            {
              "title": "should fetch prediction metrics over time",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1753,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Time range selector not found\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:15.981Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-0911f2f5dbcfa3729a9b",
              "file": "analytics.spec.ts",
              "line": 74,
              "column": 3
            },
            {
              "title": "should fetch WebSDR performance metrics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16920,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "‚ö†Ô∏è WebSDR performance endpoint not called\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:17.820Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-82e64376da4efc552e61",
              "file": "analytics.spec.ts",
              "line": 107,
              "column": 3
            },
            {
              "title": "should display charts with backend data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 30637,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts",
                            "column": 52,
                            "line": 156
                          },
                          "message": "Error: locator.textContent: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m 154 |\u001b[39m     \n \u001b[90m 155 |\u001b[39m     \u001b[90m// Verify page has meaningful content\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 156 |\u001b[39m     \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 157 |\u001b[39m     expect(pageContent)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 158 |\u001b[39m     expect(pageContent\u001b[33m!\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/analytics.spec.ts:156:52\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "‚úÖ Charts rendered with backend data\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:36.226Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---baf2c-ay-charts-with-backend-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---baf2c-ay-charts-with-backend-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/analytics-Analytics-Page---baf2c-ay-charts-with-backend-data-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-abefccd4ae5f27e3055e",
              "file": "analytics.spec.ts",
              "line": 138,
              "column": 3
            },
            {
              "title": "should handle accuracy distribution data from backend",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16949,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/websdr/performance?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/predictions/metrics?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/accuracy-distribution?time_range=7d\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/system/performance?time_range=7d\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Accuracy distribution endpoint not called\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:59:18.475Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-7d5f2b3ae524cb0e50bd",
              "file": "analytics.spec.ts",
              "line": 161,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "dashboard.spec.ts",
      "file": "dashboard.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Dashboard Page - Real Backend Integration",
          "file": "dashboard.spec.ts",
          "line": 15,
          "column": 6,
          "specs": [
            {
              "title": "should load dashboard and make real API calls for stats",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 6542,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:51:44",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                          "column": 44,
                          "line": 51
                        },
                        "snippet": "\u001b[0m \u001b[90m 49 |\u001b[39m\n \u001b[90m 50 |\u001b[39m         \u001b[90m// Verify dashboard content is visible\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 51 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 52 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m     test(\u001b[32m'should fetch WebSDR status from backend'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                            "column": 44,
                            "line": 51
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m 49 |\u001b[39m\n \u001b[90m 50 |\u001b[39m         \u001b[90m// Verify dashboard content is visible\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 51 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 52 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m     test(\u001b[32m'should fetch WebSDR status from backend'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:51:44\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚úÖ Stats API call: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.495Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---62c1c-ke-real-API-calls-for-stats-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---62c1c-ke-real-API-calls-for-stats-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---62c1c-ke-real-API-calls-for-stats-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                        "column": 44,
                        "line": 51
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "90cda532ab82d274b30b-aec89d57b0345b07da28",
              "file": "dashboard.spec.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should fetch WebSDR status from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1160,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:77:45",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                          "column": 45,
                          "line": 77
                        },
                        "snippet": "\u001b[0m \u001b[90m 75 |\u001b[39m         \u001b[36mif\u001b[39m (websdrResponse) {\n \u001b[90m 76 |\u001b[39m             expect(websdrResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(websdrResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 78 |\u001b[39m\n \u001b[90m 79 |\u001b[39m             \u001b[36mconst\u001b[39m responseBody \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m websdrResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 80 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ WebSDR API call: ${websdrResponse.status()}, received ${responseBody.length || 0} receivers`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                            "column": 45,
                            "line": 77
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 75 |\u001b[39m         \u001b[36mif\u001b[39m (websdrResponse) {\n \u001b[90m 76 |\u001b[39m             expect(websdrResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(websdrResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 78 |\u001b[39m\n \u001b[90m 79 |\u001b[39m             \u001b[36mconst\u001b[39m responseBody \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m websdrResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 80 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ WebSDR API call: ${websdrResponse.status()}, received ${responseBody.length || 0} receivers`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:77:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:28.814Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---313db--WebSDR-status-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---313db--WebSDR-status-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---313db--WebSDR-status-from-backend-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                        "column": 45,
                        "line": 77
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "90cda532ab82d274b30b-944be26dde31428bd560",
              "file": "dashboard.spec.ts",
              "line": 54,
              "column": 5
            },
            {
              "title": "should make health check API call to backend services",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1191,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:107:45",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                          "column": 45,
                          "line": 107
                        },
                        "snippet": "\u001b[0m \u001b[90m 105 |\u001b[39m\n \u001b[90m 106 |\u001b[39m         \u001b[36mif\u001b[39m (healthResponse) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m             expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 108 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Health check API call: ${healthResponse.status()} ${healthResponse.url()}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 109 |\u001b[39m         } \u001b[36melse\u001b[39m {\n \u001b[90m 110 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m'‚ö†Ô∏è No health check endpoint called from dashboard'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                            "column": 45,
                            "line": 107
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n\n\u001b[0m \u001b[90m 105 |\u001b[39m\n \u001b[90m 106 |\u001b[39m         \u001b[36mif\u001b[39m (healthResponse) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 107 |\u001b[39m             expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 108 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Health check API call: ${healthResponse.status()} ${healthResponse.url()}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 109 |\u001b[39m         } \u001b[36melse\u001b[39m {\n \u001b[90m 110 |\u001b[39m             console\u001b[33m.\u001b[39mlog(\u001b[32m'‚ö†Ô∏è No health check endpoint called from dashboard'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:107:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:38.683Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---4d6d5-PI-call-to-backend-services-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---4d6d5-PI-call-to-backend-services-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---4d6d5-PI-call-to-backend-services-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                        "column": 45,
                        "line": 107
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "90cda532ab82d274b30b-01bdfa9017a0f3c97438",
              "file": "dashboard.spec.ts",
              "line": 86,
              "column": 5
            },
            {
              "title": "should fetch recent activity/sessions from backend",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 16487,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ö†Ô∏è No activity/sessions API endpoint detected\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:46.132Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "90cda532ab82d274b30b-a31d6aeb47b2bf02fc13",
              "file": "dashboard.spec.ts",
              "line": 114,
              "column": 5
            },
            {
              "title": "should verify dashboard displays data from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 6118,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:150:35",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                          "column": 35,
                          "line": 150
                        },
                        "snippet": "\u001b[0m \u001b[90m 148 |\u001b[39m         \u001b[90m// Verify main content area exists\u001b[39m\n \u001b[90m 149 |\u001b[39m         \u001b[36mconst\u001b[39m mainContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m         \u001b[36mawait\u001b[39m expect(mainContent)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[90m// Look for any stats cards or data display\u001b[39m\n \u001b[90m 153 |\u001b[39m         \u001b[36mconst\u001b[39m hasContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mevaluate((el) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                            "column": 35,
                            "line": 150
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m(\u001b[22m\u001b[2m)\u001b[22m failed\n\nLocator: locator('main')\nExpected: visible\nTimeout: 5000ms\nError: element(s) not found\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m 148 |\u001b[39m         \u001b[90m// Verify main content area exists\u001b[39m\n \u001b[90m 149 |\u001b[39m         \u001b[36mconst\u001b[39m mainContent \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m         \u001b[36mawait\u001b[39m expect(mainContent)\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[90m// Look for any stats cards or data display\u001b[39m\n \u001b[90m 153 |\u001b[39m         \u001b[36mconst\u001b[39m hasContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mevaluate((el) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts:150:35\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:04.166Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---805bb--displays-data-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---805bb--displays-data-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/dashboard-Dashboard-Page---805bb--displays-data-from-backend-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/dashboard.spec.ts",
                        "column": 35,
                        "line": 150
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "90cda532ab82d274b30b-4f9a4aca21b32382e08d",
              "file": "dashboard.spec.ts",
              "line": 145,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "localization.spec.ts",
      "file": "localization.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Localization Page - Real Backend Integration",
          "file": "localization.spec.ts",
          "line": 18,
          "column": 6,
          "specs": [
            {
              "title": "should load localization page and fetch sources from backend",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 17299,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "‚ö†Ô∏è No localization endpoint called yet\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.601Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "ec9c160bd566307036e9-e6c6372a15a884fa385a",
              "file": "localization.spec.ts",
              "line": 24,
              "column": 3
            },
            {
              "title": "should fetch WebSDR positions for map display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 30685,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/localization.spec.ts:60:28\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:27.652Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--191a4-R-positions-for-map-display-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--191a4-R-positions-for-map-display-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--191a4-R-positions-for-map-display-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ec9c160bd566307036e9-0825f177299ea66ffee1",
              "file": "localization.spec.ts",
              "line": 55,
              "column": 3
            },
            {
              "title": "should display map container with backend data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 30649,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/localization.spec.ts",
                            "column": 52,
                            "line": 97
                          },
                          "message": "Error: locator.textContent: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m  95 |\u001b[39m     \n \u001b[90m  96 |\u001b[39m     \u001b[90m// Verify page content\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  97 |\u001b[39m     \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  98 |\u001b[39m     expect(pageContent)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m  99 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 100 |\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/localization.spec.ts:97:52\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "‚úÖ Map container rendered\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:07.610Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--8b9c9-container-with-backend-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--8b9c9-container-with-backend-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/localization-Localization--8b9c9-container-with-backend-data-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ec9c160bd566307036e9-b3cef38ac0b22c964cb0",
              "file": "localization.spec.ts",
              "line": 80,
              "column": 3
            },
            {
              "title": "should handle real-time updates if WebSocket connected",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 4766,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/localizations/recent?limit=10\n"
                        },
                        {
                          "text": "‚úÖ WebSocket monitoring enabled\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:49.283Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "ec9c160bd566307036e9-be00c5c813266ecb2ddb",
              "file": "localization.spec.ts",
              "line": 101,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "login.spec.ts",
      "file": "login.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Login Page - Real Backend Integration",
          "file": "login.spec.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "should verify backend is reachable",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 297,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üè• Checking backend health at http://localhost:8000/health\n"
                        },
                        {
                          "text": "‚úÖ Backend is reachable: 200\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.495Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-02ce3220550310dd991c",
              "file": "login.spec.ts",
              "line": 21,
              "column": 5
            },
            {
              "title": "should load login page and display form",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1014,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.920Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-1996323512f248f52297",
              "file": "login.spec.ts",
              "line": 26,
              "column": 5
            },
            {
              "title": "should make real login API call and receive JWT token",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1250,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîç Waiting for backend call: /api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: POST http://localhost:8000/api/v1/auth/login -> 200\n"
                        },
                        {
                          "text": "‚úÖ Backend call completed: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ Login API call successful, JWT token received\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:09.957Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-fd8380b287675ae60675",
              "file": "login.spec.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should redirect to dashboard after successful login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1026,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîç Waiting for backend call: /api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: POST http://localhost:8000/api/v1/auth/login -> 200\n"
                        },
                        {
                          "text": "‚úÖ Backend call completed: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ Successfully redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:11.220Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-56df6ede1e25a391899a",
              "file": "login.spec.ts",
              "line": 65,
              "column": 5
            },
            {
              "title": "should handle invalid credentials with backend error",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1092,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 401 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ Invalid login rejected with status 401\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:12.252Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-745b42047d8c0b7801fb",
              "file": "login.spec.ts",
              "line": 92,
              "column": 5
            },
            {
              "title": "should store auth token in localStorage after successful login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1010,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîç Waiting for backend call: /api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: POST http://localhost:8000/api/v1/auth/login -> 200\n"
                        },
                        {
                          "text": "‚úÖ Backend call completed: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ Auth token stored in localStorage\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:13.351Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "41d3fd2474a19feb00a1-97aa44d318c613218f10",
              "file": "login.spec.ts",
              "line": 118,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "profile.spec.ts",
      "file": "profile.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Profile Page - Real Backend Integration",
          "file": "profile.spec.ts",
          "line": 17,
          "column": 6,
          "specs": [
            {
              "title": "should load profile page and fetch user data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 30365,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts",
                            "column": 52,
                            "line": 54
                          },
                          "message": "Error: locator.textContent: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m 52 |\u001b[39m     \n \u001b[90m 53 |\u001b[39m     \u001b[90m// Verify profile content displayed\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m     expect(pageContent)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 56 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 57 |\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts:54:52\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ö†Ô∏è No profile endpoint called (may use auth state)\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:11.249Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-9dcee-le-page-and-fetch-user-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-9dcee-le-page-and-fetch-user-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-9dcee-le-page-and-fetch-user-data-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e8b79b4ee550a37632f1-27a4a77e2770c7c7d88c",
              "file": "profile.spec.ts",
              "line": 23,
              "column": 3
            },
            {
              "title": "should fetch user activity history if available",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 11829,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "‚ö†Ô∏è No activity endpoint called\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:49.747Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e8b79b4ee550a37632f1-8dd026232bc2a356750a",
              "file": "profile.spec.ts",
              "line": 58,
              "column": 3
            },
            {
              "title": "should update profile via backend API",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 17949,
                      "error": {
                        "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"",
                        "stack": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts:103:36",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts",
                          "column": 36,
                          "line": 103
                        },
                        "snippet": "\u001b[0m \u001b[90m 101 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m saveButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m3000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 102 |\u001b[39m         \u001b[90m// Setup listener for update API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m         \u001b[36mconst\u001b[39m updatePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m           (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 105 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m             \u001b[36mconst\u001b[39m method \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mrequest()\u001b[33m.\u001b[39mmethod()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts",
                            "column": 36,
                            "line": 103
                          },
                          "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n\n\u001b[0m \u001b[90m 101 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m saveButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m3000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 102 |\u001b[39m         \u001b[90m// Setup listener for update API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m         \u001b[36mconst\u001b[39m updatePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m           (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 105 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m             \u001b[36mconst\u001b[39m method \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mrequest()\u001b[33m.\u001b[39mmethod()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts:103:36\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:03.124Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-f18ee-ate-profile-via-backend-API-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-f18ee-ate-profile-via-backend-API-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/profile-Profile-Page---Rea-f18ee-ate-profile-via-backend-API-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/profile.spec.ts",
                        "column": 36,
                        "line": 103
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e8b79b4ee550a37632f1-c51f3c4d7453332268f2",
              "file": "profile.spec.ts",
              "line": 86,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "projects.spec.ts",
      "file": "projects.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Projects Page - Real Backend Integration",
          "file": "projects.spec.ts",
          "line": 19,
          "column": 6,
          "specs": [
            {
              "title": "should navigate to projects page and load sessions list",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 30139,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts:31:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/sessions\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20 -> 307\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20 -> 403\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20 -> 307\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20 -> 403\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20 -> 307\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20 -> 403\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20 -> 307\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20 -> 403\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20 -> 307\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚úÖ Backend call matched: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20 -> 403\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.731Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-bf50e-page-and-load-sessions-list-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-bf50e-page-and-load-sessions-list-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-bf50e-page-and-load-sessions-list-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3a2958b1096c5d9a8472-04cbf6c05ec807d350ce",
              "file": "projects.spec.ts",
              "line": 25,
              "column": 3
            },
            {
              "title": "should create new recording session via backend API",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 30171,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts",
                            "column": 18,
                            "line": 61
                          },
                          "message": "Error: page.fill: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"session_name\"], input[placeholder*=\"name\" i]')\u001b[22m\n\n\n\u001b[0m \u001b[90m 59 |\u001b[39m       \n \u001b[90m 60 |\u001b[39m       \u001b[90m// Fill session form\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mfill(\u001b[32m'input[name=\"session_name\"], input[placeholder*=\"name\" i]'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'E2E Test Session'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mfill(\u001b[32m'input[name=\"frequency_mhz\"], input[type=\"number\"]'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'145.5'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mfill(\u001b[32m'input[name=\"duration_seconds\"]'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'30'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m       \u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts:61:18\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:46.494Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-e4b5d-ing-session-via-backend-API-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-e4b5d-ing-session-via-backend-API-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-e4b5d-ing-session-via-backend-API-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3a2958b1096c5d9a8472-23eef65ce0c386624cad",
              "file": "projects.spec.ts",
              "line": 50,
              "column": 3
            },
            {
              "title": "should start recording session and trigger backend acquisition",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6214,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m307\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m307\u001b[39m\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts:125:38",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts",
                          "column": 38,
                          "line": 125
                        },
                        "snippet": "\u001b[0m \u001b[90m 123 |\u001b[39m       \u001b[36mconst\u001b[39m startResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m startResponsePromise\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       expect(startResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m       expect(startResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m       \n \u001b[90m 127 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Recording started: ${startResponse.status()} ${startResponse.url()}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m     } \u001b[36melse\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts",
                            "column": 38,
                            "line": 125
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m307\u001b[39m\n\n\u001b[0m \u001b[90m 123 |\u001b[39m       \u001b[36mconst\u001b[39m startResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m startResponsePromise\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       expect(startResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m       expect(startResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m       \n \u001b[90m 127 |\u001b[39m       console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Recording started: ${startResponse.status()} ${startResponse.url()}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m     } \u001b[36melse\u001b[39m {\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts:125:38\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:28.788Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-1ba29-trigger-backend-acquisition-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-1ba29-trigger-backend-acquisition-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/projects-Projects-Page---R-1ba29-trigger-backend-acquisition-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/projects.spec.ts",
                        "column": 38,
                        "line": 125
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3a2958b1096c5d9a8472-2f315f57346c08b28749",
              "file": "projects.spec.ts",
              "line": 97,
              "column": 3
            },
            {
              "title": "should update session approval status via backend",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 3669,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Approve button not found\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:42.727Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "3a2958b1096c5d9a8472-e436fc1799ff4314c4ba",
              "file": "projects.spec.ts",
              "line": 133,
              "column": 3
            },
            {
              "title": "should delete session via backend API",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 3618,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 307 http://localhost:8000/api/v1/sessions?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/sessions/?page=1&per_page=20\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Delete button not found\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:46.479Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "3a2958b1096c5d9a8472-a86f0c596e3af7f57604",
              "file": "projects.spec.ts",
              "line": 173,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "settings.spec.ts",
      "file": "settings.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Settings Page - Real Backend Integration",
          "file": "settings.spec.ts",
          "line": 17,
          "column": 6,
          "specs": [
            {
              "title": "should load settings page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "timedOut",
                      "duration": 30677,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts",
                            "column": 52,
                            "line": 28
                          },
                          "message": "Error: locator.textContent: Test timeout of 30000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('main')\u001b[22m\n\n\n\u001b[0m \u001b[90m 26 |\u001b[39m     \n \u001b[90m 27 |\u001b[39m     \u001b[90m// Verify settings page loaded\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m     \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m     expect(pageContent)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 30 |\u001b[39m     expect(pageContent)\u001b[33m.\u001b[39mtoMatch(\u001b[35m/Settings|Preferences|Configuration/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 31 |\u001b[39m     \u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts:28:52\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:09.464Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-36af7-n-should-load-settings-page-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-36af7-n-should-load-settings-page-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-36af7-n-should-load-settings-page-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d877ffdf71ec720167ae-06e94566d064111b13f0",
              "file": "settings.spec.ts",
              "line": 23,
              "column": 3
            },
            {
              "title": "should fetch user settings from backend if endpoint exists",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 11787,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ö†Ô∏è No settings endpoint called (may be client-side only)\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:48.113Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d877ffdf71ec720167ae-eb5ed1622fa823bef8dc",
              "file": "settings.spec.ts",
              "line": 35,
              "column": 3
            },
            {
              "title": "should update settings via backend API",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 16942,
                      "error": {
                        "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"",
                        "stack": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts:73:34",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts",
                          "column": 34,
                          "line": 73
                        },
                        "snippet": "\u001b[0m \u001b[90m 71 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m saveButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 72 |\u001b[39m       \u001b[90m// Setup listener for update API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 73 |\u001b[39m       \u001b[36mconst\u001b[39m updatePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 74 |\u001b[39m         (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 75 |\u001b[39m           \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 76 |\u001b[39m           \u001b[36mconst\u001b[39m method \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mrequest()\u001b[33m.\u001b[39mmethod()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts",
                            "column": 34,
                            "line": 73
                          },
                          "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n\n\u001b[0m \u001b[90m 71 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m saveButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 72 |\u001b[39m       \u001b[90m// Setup listener for update API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 73 |\u001b[39m       \u001b[36mconst\u001b[39m updatePromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 74 |\u001b[39m         (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 75 |\u001b[39m           \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 76 |\u001b[39m           \u001b[36mconst\u001b[39m method \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mrequest()\u001b[33m.\u001b[39mmethod()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts:73:34\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:01.453Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-794a0-te-settings-via-backend-API-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-794a0-te-settings-via-backend-API-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/settings-Settings-Page---R-794a0-te-settings-via-backend-API-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/settings.spec.ts",
                        "column": 34,
                        "line": 73
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d877ffdf71ec720167ae-09ab14854b2df5512db5",
              "file": "settings.spec.ts",
              "line": 64,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "system-status.spec.ts",
      "file": "system-status.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "System Status Page - Real Backend Integration",
          "file": "system-status.spec.ts",
          "line": 17,
          "column": 6,
          "specs": [
            {
              "title": "should load system status page and fetch health data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 17296,
                      "error": {
                        "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"",
                        "stack": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:28:36",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                          "column": 36,
                          "line": 28
                        },
                        "snippet": "\u001b[0m \u001b[90m 26 |\u001b[39m\n \u001b[90m 27 |\u001b[39m         \u001b[90m// Wait for system health API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m         \u001b[36mconst\u001b[39m healthPromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 30 |\u001b[39m                 \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 31 |\u001b[39m                 \u001b[36mreturn\u001b[39m (\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                            "column": 36,
                            "line": 28
                          },
                          "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n\n\u001b[0m \u001b[90m 26 |\u001b[39m\n \u001b[90m 27 |\u001b[39m         \u001b[90m// Wait for system health API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m         \u001b[36mconst\u001b[39m healthPromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 30 |\u001b[39m                 \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 31 |\u001b[39m                 \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:28:36\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:08.499Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-5996e--page-and-fetch-health-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-5996e--page-and-fetch-health-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-5996e--page-and-fetch-health-data-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                        "column": 36,
                        "line": 28
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d6cd388c082a08481160-8162b5f5b92d99161392",
              "file": "system-status.spec.ts",
              "line": 23,
              "column": 5
            },
            {
              "title": "should fetch service status for all microservices",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 16883,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Services status endpoint not called\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:33.490Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d6cd388c082a08481160-7fe938d5de2d8178b629",
              "file": "system-status.spec.ts",
              "line": 50,
              "column": 5
            },
            {
              "title": "should fetch performance metrics from backend",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 16955,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ö†Ô∏è Metrics endpoint not called\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:50.455Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d6cd388c082a08481160-6a589d9da8be6729b373",
              "file": "system-status.spec.ts",
              "line": 79,
              "column": 5
            },
            {
              "title": "should display service health indicators from backend data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 3623,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:119:37",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                          "column": 37,
                          "line": 119
                        },
                        "snippet": "\u001b[0m \u001b[90m 117 |\u001b[39m             \u001b[33m.\u001b[39mthen(count \u001b[33m=>\u001b[39m count \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 119 |\u001b[39m         expect(hasStatusIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 120 |\u001b[39m\n \u001b[90m 121 |\u001b[39m         \u001b[90m// Verify meaningful content\u001b[39m\n \u001b[90m 122 |\u001b[39m         \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                            "column": 37,
                            "line": 119
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 117 |\u001b[39m             \u001b[33m.\u001b[39mthen(count \u001b[33m=>\u001b[39m count \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 119 |\u001b[39m         expect(hasStatusIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 120 |\u001b[39m\n \u001b[90m 121 |\u001b[39m         \u001b[90m// Verify meaningful content\u001b[39m\n \u001b[90m 122 |\u001b[39m         \u001b[36mconst\u001b[39m pageContent \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m.\u001b[39mtextContent()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:119:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:08.879Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-80b9d-ndicators-from-backend-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-80b9d-ndicators-from-backend-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-80b9d-ndicators-from-backend-data-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                        "column": 37,
                        "line": 119
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d6cd388c082a08481160-1e8d8535ac7553118c97",
              "file": "system-status.spec.ts",
              "line": 107,
              "column": 5
            },
            {
              "title": "should refresh status on manual trigger",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 18995,
                      "error": {
                        "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"",
                        "stack": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:141:41",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                          "column": 41,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m refreshButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 140 |\u001b[39m             \u001b[90m// Setup listener for refresh API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             \u001b[36mconst\u001b[39m refreshPromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m                 (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 143 |\u001b[39m                     \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m                     \u001b[36mreturn\u001b[39m (\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                            "column": 41,
                            "line": 141
                          },
                          "message": "TimeoutError: page.waitForResponse: Timeout 15000ms exceeded while waiting for event \"response\"\n\n\u001b[0m \u001b[90m 139 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m refreshButton\u001b[33m.\u001b[39misVisible({ timeout\u001b[33m:\u001b[39m \u001b[35m5000\u001b[39m })\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m \u001b[36mfalse\u001b[39m)) {\n \u001b[90m 140 |\u001b[39m             \u001b[90m// Setup listener for refresh API call\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             \u001b[36mconst\u001b[39m refreshPromise \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m                 (response) \u001b[33m=>\u001b[39m {\n \u001b[90m 143 |\u001b[39m                     \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m                     \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts:141:41\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:21.380Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-8858a-sh-status-on-manual-trigger-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-8858a-sh-status-on-manual-trigger-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/system-status-System-Statu-8858a-sh-status-on-manual-trigger-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/system-status.spec.ts",
                        "column": 41,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d6cd388c082a08481160-03e717b7ad883818f4d5",
              "file": "system-status.spec.ts",
              "line": 129,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "websdr-management.spec.ts",
      "file": "websdr-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "WebSDR Management Page - Real Backend Integration",
          "file": "websdr-management.spec.ts",
          "line": 18,
          "column": 6,
          "specs": [
            {
              "title": "should load WebSDR list from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 8,
                      "status": "timedOut",
                      "duration": 30683,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:30:36\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:12.616Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-9fb6b-ad-WebSDR-list-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-9fb6b-ad-WebSDR-list-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-9fb6b-ad-WebSDR-list-from-backend-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3b601e9975c40f9f9fb4-e830a5feacd1a4ee0c97",
              "file": "websdr-management.spec.ts",
              "line": 24,
              "column": 3
            },
            {
              "title": "should check WebSDR health status from backend",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 1751,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m\n    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:83:37",
                        "location": {
                          "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts",
                          "column": 37,
                          "line": 83
                        },
                        "snippet": "\u001b[0m \u001b[90m 81 |\u001b[39m     \n \u001b[90m 82 |\u001b[39m     expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 83 |\u001b[39m     expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 84 |\u001b[39m     \n \u001b[90m 85 |\u001b[39m     \u001b[36mconst\u001b[39m responseBody \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m healthResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Health check completed: ${JSON.stringify(responseBody).substring(0, 100)}...`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts",
                            "column": 37,
                            "line": 83
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 81 |\u001b[39m     \n \u001b[90m 82 |\u001b[39m     expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 83 |\u001b[39m     expect(healthResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 84 |\u001b[39m     \n \u001b[90m 85 |\u001b[39m     \u001b[36mconst\u001b[39m responseBody \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m healthResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚úÖ Health check completed: ${JSON.stringify(responseBody).substring(0, 100)}...`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:83:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:57:53.517Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-a8648--health-status-from-backend-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-a8648--health-status-from-backend-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-a8648--health-status-from-backend-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts",
                        "column": 37,
                        "line": 83
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3b601e9975c40f9f9fb4-62361ad5bbdc47742a9e",
              "file": "websdr-management.spec.ts",
              "line": 57,
              "column": 3
            },
            {
              "title": "should display WebSDR status indicators from backend data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 7,
                      "status": "timedOut",
                      "duration": 30851,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:94:11\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:04.992Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-69ea5-ndicators-from-backend-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-69ea5-ndicators-from-backend-data-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-69ea5-ndicators-from-backend-data-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3b601e9975c40f9f9fb4-0551e1436faec4c7eff4",
              "file": "websdr-management.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should handle WebSDR configuration view",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 30700,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:118:11\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:58:42.976Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-98366-e-WebSDR-configuration-view-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-98366-e-WebSDR-configuration-view-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-98366-e-WebSDR-configuration-view-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3b601e9975c40f9f9fb4-4d4fa2ad00f3f10af19e",
              "file": "websdr-management.spec.ts",
              "line": 113,
              "column": 3
            },
            {
              "title": "should verify all 7 Italian WebSDRs are listed",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 30644,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts",
                            "column": 33,
                            "line": 30
                          },
                          "message": "Error: page.waitForResponse: Test timeout of 30000ms exceeded.\n\n\u001b[90m   at \u001b[39mhelpers/test-utils.ts:30\n\n\u001b[0m \u001b[90m 28 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`üîç Waiting for backend call: ${urlPattern}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 29 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForResponse(\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 31 |\u001b[39m         (response\u001b[33m:\u001b[39m \u001b[33mResponse\u001b[39m) \u001b[33m=>\u001b[39m {\n \u001b[90m 32 |\u001b[39m             \u001b[36mconst\u001b[39m url \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39murl()\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m             \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at waitForBackendCall (/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/helpers/test-utils.ts:30:33)\u001b[22m\n\u001b[2m    at /mnt/c/Users/aless/Documents/Projects/heimdall/frontend/e2e/websdr-management.spec.ts:146:35\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üîê Logging in as admin@heimdall.local\n"
                        },
                        {
                          "text": "üì§ Request: POST http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/auth/login\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚úÖ OAuth2 token received from API Gateway\n"
                        },
                        {
                          "text": "‚úÖ Login successful, redirected to dashboard\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì§ Request: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/acquisition/websdrs\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/api-gateway/health\n"
                        },
                        {
                          "text": "üì• Response: 404 http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "üì• Response: 403 http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "üì• Response: 200 http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "üîç Waiting for backend call: /api/v1/acquisition/websdrs\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/rf-acquisition/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/inference/health\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/analytics/model/info\n"
                        },
                        {
                          "text": "‚ùå Request failed: GET http://localhost:8000/api/v1/api-gateway/health\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-10-25T02:59:25.387Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-485e0--Italian-WebSDRs-are-listed-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-485e0--Italian-WebSDRs-are-listed-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/mnt/c/Users/aless/Documents/Projects/heimdall/frontend/test-results/websdr-management-WebSDR-M-485e0--Italian-WebSDRs-are-listed-chromium/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "3b601e9975c40f9f9fb4-e66bab001d5989e70206",
              "file": "websdr-management.spec.ts",
              "line": 141,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-25T02:57:03.896Z",
    "duration": 166324.473,
    "expected": 18,
    "skipped": 0,
    "unexpected": 24,
    "flaky": 0
  }
}